#!/bin/bash

LIST=0
POSITIONAL=()
EXCLUDE=()
INCLUDE=()

function show_usage()
{
    echo "Usage: sosreport-mkaliases [-l] sosreport01234/"
    echo " -l\tList available units"
    echo " -e\tExclude units from symlinked, use this as many times you want."
    echo " -i\tInclude units to be symliked, only these units will be considered."
    exit 1
}

while [[ $# -gt 0 ]]
do
    key="$1"

    case $key in
        -h|--help)
            show_usage
            exit 1
            ;;
        -l|--list)
            LIST=1
            shift
            ;;
        -e|--exclude)
            EXCLUDE+=("$2")
            shift # past argument
            shift # past value
            ;;
        -i|--include)
            INCLUDE+=("$2")
            shift
            shift
            ;;
        *)    # unknown option
            POSITIONAL+=("$1") # save it in an array for later
            shift # past argument
            ;;
    esac
done

set -- "${POSITIONAL[@]}" # restore positional parameters
WHERE="${1:-.}"

# if EXCLUDE and INCLUDE are empty, then assume --list
if [ ${#EXCLUDE[@]} -eq 0 ] && [ ${#INCLUDE[@]} -eq 0 ]; then
    LIST=1
fi


for DIR in $(find $WHERE -maxdepth 1 -name "sosreport-*" -type d); do

    if [ $LIST -eq 1 ]; then
        echo "$DIR"
    fi

    for UNIT in $(grep "jujud unit" $DIR/ps | rev | cut -d' ' -f2 | rev | tr '/' '-'); do

        if [ $LIST -eq 1 ]; then
            echo "    $UNIT"
            continue
        fi

        # if EXCLUDE is empty, then the default is to skip it unless it's added by -i
        if [ ${#EXCLUDE[@]} -eq 0 ]; then
            SKIP=1
        else
            SKIP=0
        fi

        for ITEM in ${EXCLUDE[*]}; do
            if [[ "$UNIT" == $ITEM* ]]; then
                SKIP=1
            fi
        done

        for ITEM in ${INCLUDE[*]}; do
            if [[ "$UNIT" == $ITEM* ]]; then
                SKIP=0
            fi
        done

        if [ $SKIP -eq 0 ]; then
            ln -s $DIR $UNIT
        fi
    done
done
